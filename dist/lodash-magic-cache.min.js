'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _isArray = _interopDefault(require('lodash/fp/isArray'));
var _isString = _interopDefault(require('lodash/fp/isString'));
var _flow = _interopDefault(require('lodash/fp/flow'));
var _map = _interopDefault(require('lodash/fp/map'));
var _filter = _interopDefault(require('lodash/fp/filter'));
var _startsWith = _interopDefault(require('lodash/fp/startsWith'));
var _replace = _interopDefault(require('lodash/fp/replace'));
var _fromPairs = _interopDefault(require('lodash/fp/fromPairs'));

var _={flow:_flow,isArray:_isArray,isString:_isString,map:_map,startsWith:_startsWith,filter:_filter,replace:_replace,fromPairs:_fromPairs},importedModules=new Map,requireLodash=function(a){return importedModules.has(a)||importedModules.set(a,require("lodash/".concat(a))),importedModules.get(a)},requireLodashFP=function(a){return requireLodash("fp/".concat(a))},getMultiple=function(a){var b=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1];return _.fromPairs(b?_.map(function(a){return [a,requireLodashFP(a)]})(a):_.map(function(a){return [a,requireLodash(a)]})(a))},getSingle=function(a){var b=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1];return _.fromPairs(b?[[a,requireLodashFP(a)]]:[[a,requireLodash(a)]])};var cache = {get:function get(a){var b=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1];if(_.isArray(a))return getMultiple(a,b);if(_.isString(a))return getSingle(a,b);throw new TypeError("Expecting [String] or a String lodash method name(s), instead got ".concat(a))},has:function has(a){var b=!!(1<arguments.length&&arguments[1]!==void 0)&&arguments[1];return importedModules.has("".concat(b?"fp/":"").concat(a))},clear:function clear(){return importedModules.clear()}};

var main = {lodash:function lodash(a){return cache.get(a,!1)},lodashFP:function lodashFP(a){return cache.get(a,!0)}};

module.exports = main;
//# sourceMappingURL=lodash-magic-cache.min.js.map
