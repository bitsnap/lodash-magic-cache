{"version":3,"file":"lodash-magic-cache.min.js","sources":["../src/cache.js","../src/main.js"],"sourcesContent":["import _isArray from 'lodash/fp/isArray';\nimport _isString from 'lodash/fp/isString';\nimport _flow from 'lodash/fp/flow';\nimport _map from 'lodash/fp/map';\nimport _filter from 'lodash/fp/filter';\nimport _startsWith from 'lodash/fp/startsWith';\nimport _replace from 'lodash/fp/replace';\nimport _fromPairs from 'lodash/fp/fromPairs';\n\nconst _ = {\n  flow: _flow,\n  isArray: _isArray,\n  isString: _isString,\n  map: _map,\n  startsWith: _startsWith,\n  filter: _filter,\n  replace: _replace,\n  fromPairs: _fromPairs,\n};\n\nconst importedModules = new Map();\n\nconst requireLodash = (name) => {\n  if (!importedModules.has(name)) {\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    importedModules.set(name, require(`lodash/${name}`));\n  }\n\n  return importedModules.get(name);\n};\n\nconst requireLodashFP = name => requireLodash(`fp/${name}`);\n\nconst getMultiple = (modules, fp = false) => _.fromPairs(fp ?\n  _.map(m => [m, requireLodashFP(m)])(modules)\n  : _.map(m => [m, requireLodash(m)])(modules));\n\nconst getSingle = (mod, fp = false) => _.fromPairs(fp ?\n  [[mod, requireLodashFP(mod)]]\n  : [[mod, requireLodash(mod)]]);\n\nexport default {\n  get: (modules, fp = false) => {\n    if (_.isArray(modules)) {\n      return getMultiple(modules, fp);\n    }\n\n    if (_.isString(modules)) {\n      return getSingle(modules, fp);\n    }\n\n    throw new TypeError(`Expecting [String] or a String lodash method name(s), instead got ${modules}`);\n  },\n\n  has: (name, fp = false) => importedModules.has(`${fp ? 'fp/' : ''}${name}`),\n\n  clear: () => importedModules.clear(),\n};\n","import cache from 'cache';\n\nexport default {\n  lodash(modules) {\n    return cache.get(modules, false);\n  },\n\n  lodashFP(modules) {\n    return cache.get(modules, true);\n  },\n};\n"],"names":["flow","_flow","isArray","_isArray","isString","_isString","map","_map","startsWith","_startsWith","filter","_filter","replace","_replace","fromPairs","_fromPairs","importedModules","requireLodash","name","has","set","require","get","requireLodashFP","getMultiple","modules","fp","_","m","getSingle","mod","clear","lodash","lodashFP"],"mappings":";;;;;;;;;;;;;AASA,MAAU,CACRA,KAAMC,KADE,CAERC,QAASC,QAFD,CAGRC,SAAUC,SAHF,CAIRC,IAAKC,IAJG,CAKRC,WAAYC,WALJ,CAMRC,OAAQC,OANA,CAORC,QAASC,QAPD,CAQRC,UAAWC,UARH,CAAV,CAWMC,gBAAkB,OAXxB,CAaMC,cAAgB,SAACC,CAAD,CAAU,CAM9B,uBALqBC,GAAhB,CAAoBD,CAApB,CAKL,EAHEF,gBAAgBI,GAAhB,CAAoBF,CAApB,CAA0BG,yBAAkBH,CAAlB,EAA1B,CAGF,CAAOF,gBAAgBM,GAAhB,CAAoBJ,CAApB,CACR,CApBD,CAsBMK,gBAAkB,8CAA4BL,CAApB,EAAR,CAtBxB,CAwBMM,YAAc,SAACC,CAAD,OAAA,sEAA2BX,SAAF,CAAYY,EACvDC,EAAErB,GAAF,CAAM,mBAAK,CAACsB,CAAD,CAAIL,gBAAgBK,CAAhB,CAAJ,CAAL,CAAN,EAAoCH,CAApC,CADuD,CAErDE,EAAErB,GAAF,CAAM,mBAAK,CAACsB,CAAD,CAAIX,cAAcW,CAAd,CAAJ,CAAL,CAAN,EAAkCH,CAAlC,CAFyC,CAAzB,CAxBpB,CA4BMI,UAAY,SAACC,CAAD,OAAA,sEAAuBhB,SAAF,CAAYY,EACjD,CAAC,CAACI,CAAD,CAAMP,gBAAgBO,CAAhB,CAAN,CAAD,CADiD,CAE/C,CAAC,CAACA,CAAD,CAAMb,cAAca,CAAd,CAAN,CAAD,CAFmC,CAArB,CA5BlB,CAgCA,YAAe,CACbR,IAAK,aAACG,CAAD,CAAyB,MAAA,6DAC5B,GAAIE,EAAEzB,OAAF,CAAUuB,CAAV,CAAJ,CACE,mBAAmBA,CAAZ,CAAqBC,CAArB,CAAP,CAGF,GAAIC,EAAEvB,QAAF,CAAWqB,CAAX,CAAJ,CACE,iBAAiBA,CAAV,CAAmBC,CAAnB,CAAP,CAGF,mBAAM,6EAAmFD,CAAnF,EACP,CAXY,CAabN,IAAK,aAACD,CAAD,OAAA,oFAAsCC,GAAhB,WAAuBO,EAAK,KAAL,CAAa,EAApC,SAAyCR,CAAzC,EAAtB,CAbQ,CAeba,MAAO,wCAAsBA,KAAhB,EAAN,CAfM,CAAf;;ACvCA,WAAe,CACbC,MADa,iBACNP,CADM,CACG,CACd,aAAaH,GAAN,CAAUG,CAAV,IACR,CAHY,CAKbQ,QALa,mBAKJR,CALI,CAKK,CAChB,aAAaH,GAAN,CAAUG,CAAV,IACR,CAPY,CAAf;;;;"}