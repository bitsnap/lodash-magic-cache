{"version":3,"file":"lodash-magic-cache.min.js","sources":["../src/cache.js","../src/main.js"],"sourcesContent":["import _isArray from 'lodash/fp/isArray';\nimport _isString from 'lodash/fp/isString';\nimport _flow from 'lodash/fp/flow';\nimport _map from 'lodash/fp/map';\nimport _filter from 'lodash/fp/filter';\nimport _startsWith from 'lodash/fp/startsWith';\nimport _replace from 'lodash/fp/replace';\nimport _fromPairs from 'lodash/fp/fromPairs';\n\nconst _ = {\n  flow: _flow,\n  isArray: _isArray,\n  isString: _isString,\n  map: _map,\n  startsWith: _startsWith,\n  filter: _filter,\n  replace: _replace,\n  fromPairs: _fromPairs,\n};\n\nconst importedModules = new Map();\n\nconst requireLodash = (name) => {\n  if (!importedModules.has(name)) {\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    importedModules.set(name, require(`lodash/${name}`));\n  }\n\n  return importedModules.get(name);\n};\n\nconst requireLodashFP = name => requireLodash(`fp/${name}`);\n\nconst getMultiple = (modules, fp = false) => _.fromPairs(fp\n  ? _.map(m => [m, requireLodashFP(m)])(modules)\n  : _.map(m => [m, requireLodash(m)])(modules));\n\nconst getSingle = (mod, fp = false) => _.fromPairs(fp\n  ? [[mod, requireLodashFP(mod)]]\n  : [[mod, requireLodash(mod)]]);\n\nexport default {\n  get: (modules, fp = false) => {\n    if (_.isArray(modules)) {\n      return getMultiple(modules, fp);\n    }\n\n    if (_.isString(modules)) {\n      return getSingle(modules, fp);\n    }\n\n    throw new TypeError(`Expecting [String] or a String lodash method name(s), instead got ${modules}`);\n  },\n\n  has: (name, fp = false) => importedModules.has(`${fp ? 'fp/' : ''}${name}`),\n\n  clear: () => importedModules.clear(),\n};\n","import cache from 'cache';\n\nexport default {\n  lodash(modules) {\n    return cache.get(modules, false);\n  },\n\n  lodashFP(modules) {\n    return cache.get(modules, true);\n  },\n};\n"],"names":["_","flow","_flow","isArray","_isArray","isString","_isString","map","_map","startsWith","_startsWith","filter","_filter","replace","_replace","fromPairs","_fromPairs","importedModules","Map","requireLodash","name","has","set","require","get","requireLodashFP","getMultiple","modules","fp","m","getSingle","mod","TypeError","clear","lodash","cache","lodashFP"],"mappings":";;;;;;;;;;;;;IASMA,CAAC,CAAG,CACRC,IAAI,CAAEC,KADE,CAERC,OAAO,CAAEC,QAFD,CAGRC,QAAQ,CAAEC,SAHF,CAIRC,GAAG,CAAEC,IAJG,CAKRC,UAAU,CAAEC,WALJ,CAMRC,MAAM,CAAEC,OANA,CAORC,OAAO,CAAEC,QAPD,CAQRC,SAAS,CAAEC,UARH,EAWJC,eAAe,CAAG,IAAIC,IAEtBC,aAAa,CAAG,SAACC,CAAD,CAAU,CAM9B,OALKH,eAAe,CAACI,GAAhB,CAAoBD,CAApB,CAKL,EAHEH,eAAe,CAACK,GAAhB,CAAoBF,CAApB,CAA0BG,OAAO,kBAAWH,CAAX,EAAjC,CAGF,CAAOH,eAAe,CAACO,GAAhB,CAAoBJ,CAApB,CACR,EAEKK,eAAe,CAAG,SAAAL,CAAI,SAAID,aAAa,cAAOC,CAAP,EAAjB,EAEtBM,WAAW,CAAG,SAACC,CAAD,MAAUC,CAAV,oEAAyB5B,CAAC,CAACe,SAAF,CAAYa,CAAE,CACvD5B,CAAC,CAACO,GAAF,CAAM,SAAAsB,CAAC,SAAI,CAACA,CAAD,CAAIJ,eAAe,CAACI,CAAD,CAAnB,CAAJ,CAAP,EAAoCF,CAApC,CADuD,CAEvD3B,CAAC,CAACO,GAAF,CAAM,SAAAsB,CAAC,SAAI,CAACA,CAAD,CAAIV,aAAa,CAACU,CAAD,CAAjB,CAAJ,CAAP,EAAkCF,CAAlC,CAFyC,CAAzB,EAIdG,SAAS,CAAG,SAACC,CAAD,MAAMH,CAAN,oEAAqB5B,CAAC,CAACe,SAAF,CAAYa,CAAE,CACjD,CAAC,CAACG,CAAD,CAAMN,eAAe,CAACM,CAAD,CAArB,CAAD,CADiD,CAEjD,CAAC,CAACA,CAAD,CAAMZ,aAAa,CAACY,CAAD,CAAnB,CAAD,CAFmC,CAArB,EAIlB,YAAe,CACbP,GAAG,CAAE,WAACG,CAAD,CAAyB,KAAfC,CAAe,6DAC5B,GAAI5B,CAAC,CAACG,OAAF,CAAUwB,CAAV,CAAJ,CACE,OAAOD,WAAW,CAACC,CAAD,CAAUC,CAAV,CAAlB,CAGF,GAAI5B,CAAC,CAACK,QAAF,CAAWsB,CAAX,CAAJ,CACE,OAAOG,SAAS,CAACH,CAAD,CAAUC,CAAV,CAAhB,CAGF,UAAUI,SAAJ,6EAAmFL,CAAnF,EACP,CAXY,CAabN,GAAG,CAAE,WAACD,CAAD,MAAOQ,CAAP,oEAAsBX,eAAe,CAACI,GAAhB,WAAuBO,CAAE,CAAG,KAAH,CAAW,EAApC,SAAyCR,CAAzC,EAAtB,CAbQ,CAeba,KAAK,CAAE,oBAAMhB,eAAe,CAACgB,KAAhB,EAAN,CAfM,CAAf;;ACvCA,WAAe,CACbC,MADa,YACNP,CADM,CACG,CACd,OAAOQ,KAAK,CAACX,GAAN,CAAUG,CAAV,IACR,CAHY,CAKbS,QALa,YAKJT,CALI,CAKK,CAChB,OAAOQ,KAAK,CAACX,GAAN,CAAUG,CAAV,IACR,CAPY,CAAf;;;;"}